@ngdoc overview
@name Developer Guide
@description

# Guide to GenericFrontend Documentation

Everything you need to know about developing the GenericFrontend fontend application.

<div class="alert alert-warning">
**Note:** this guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend you have a look at the [AngularJS Tutorial](https://docs.angularjs.org/tutorial) and the [AngularJS Documentation](https://docs.angularjs.org/guide) first.
</div>

* {@link /guide/concepts Conceptual Overview}
* {@link /guide/dependencies Library Dependencies}
* {@link /guide/resources Resource Objects}
* {@link /guide/services Service Objects}
* {@link /guide/controllers Writing Controllers}
* {@link /guide/docu Writing Documentation}
* {@link /guide/glossary Writing Glossary Entries}
* {@link /guide/build Building GenericFrontend}
* {@link /guide/custom Customer-specific builds}

## Core Concepts

GenericFrontend is a single-page Javascript application ([SPA](https://en.wikipedia.org/wiki/Single-page_application)) written in [AngularJS](https://docs.angularjs.org/api). Right now we're using AngularJS version 1.4.0.

The application is structured into multiple layers following the **Model-View-Controller** pattern. Objects in the data model are created, read, updated and deleted through {@link /guide/resources resource objects} that communicate with the backend API.

**Resources** are managed inside {@link /guide/services services} which take care of state updates, caching, listing and querying resources. Services are singleton instances and they are the main authority over any resource in GenericFrontend.

**Views**, or application screens, are rendered from HTML templates which are loaded on demand by Angular's template system. The connection between views and the internal data model is managed by controllers.

**Controllers** are specific for views, but in order to reuse functionality controllers can be {@link /guide/controllers mixed}. To manipulate a resource a controller may use the resource functions, to create, list, query or destroy resources the controller would call a service.

### Testing

* **Unit testing:** [Jasmine 2.0](https://jasmine.github.io/2.0/introduction.html)
* **Mocking Dependencies** https://www.sitepoint.com/mocking-dependencies-angularjs-tests/
* **Scenario testing:** todo


## Tools

* **Debugging:** [Batarang](https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk?hl=en)

* **Testing:** [Karma](http://karma-runner.github.io), [Protractor](https://github.com/angular/protractor)

* **Editor support:** [Webstorm](http://plugins.jetbrains.com/plugin/6971) (and [video](http://www.youtube.com/watch?v=LJOyrSh1kDU)), [Sublime Text](https://github.com/angular-ui/AngularJS-sublime-package), [Visual Studio](http://madskristensen.net/post/angularjs-intellisense-in-visual-studio-2012)

* **Workflow:** [Yeoman.io](https://github.com/yeoman/generator-angular) and [Angular Yeoman Tutorial](http://www.sitepoint.com/kickstart-your-angularjs-development-with-yeoman-grunt-and-bower/)


## Deployment

* **Javascript minification: **[Background](http://thegreenpizza.github.io/2013/05/25/building-minification-safe-angular.js-applications/), [ngmin automation tool](http://www.thinkster.io/pick/XlWneEZCqY/angularjs-ngmin)

* **Tracking:** [Angularyitcs (Google Analytics)](http://ngmodules.org/modules/angularytics), [Logging Client-Side Errors](http://www.bennadel.com/blog/2542-Logging-Client-Side-Errors-With-AngularJS-And-Stacktrace-js.htm)

* **SEO:** [By hand](http://www.yearofmoo.com/2012/11/angularjs-and-seo.html), [prerender.io](http://prerender.io/), [Brombone](http://www.brombone.com/), [SEO.js](http://getseojs.com/), [SEO4Ajax](http://www.seo4ajax.com/)


## Getting Help

The recipe for getting help on your unique issue is to create an example that could work (even if it doesn't) in a shareable example on [Plunker](http://plnkr.co/), [JSFiddle](http://jsfiddle.net/), or similar site and then post to one of the following:

* [Stackoverflow.com](http://stackoverflow.com/search?q=angularjs)

* [AngularJS mailing list](https://groups.google.com/forum/#!forum/angular)

* [AngularJS IRC channel](http://webchat.freenode.net/?channels=angularjs&uio=d4)

## Social Channels

* **Daily updates:** [Google+](https://plus.google.com/u/0/+AngularJS) or [Twitter](https://twitter.com/angularjs)

* **Weekly newsletter:** [ng-newsletter](http://www.ng-newsletter.com/)

* **Meetups: **[meetup.com](http://www.meetup.com/find/?keywords=angularJS&radius=Infinity&userFreeform=San+Francisco%2C+CA&mcId=z94108&mcName=San+Francisco%2C+CA&sort=member_count&eventFilter=mysugg)

* **Official news and releases: **[AngularJS Blog](http://blog.angularjs.org/)

## Final Bits

Didn't find what you're looking for here?  Check out [AngularJS-Learning](https://github.com/jmcunningham/AngularJS-Learning) for an even more comprehensive list of links to videos, tutorials, and blog posts.

